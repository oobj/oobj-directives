"use strict";describe("Teste de Directiva: oobjInputText - ",function(){function a(){var a=angular.element('<oobj-input-text show-label="showLabel" ng-model="ngModel" ng-required="ngRequired" ng-disabled="ngDisabled" ng-readonly="ngReadonly" remove-mask="removeMask" autofocus="autofocus" currency="currency" to-upper="toUpper" to-lower="toLower" ng-change="ngChange()" ng-keyup="ngKeyup()" ng-keydown="ngKeydown()" ng-blur="ngBlur()"></oobj-input-text>'),b=c(a)(d);return d.$digest(),b}var b,c,d,e,f;beforeEach(function(){module("oobjDirectives"),angular.mock.module("templates")}),beforeEach(inject(function(g,h){b=h,d=b.$new(),c=g,d.id="testeId",d.colspan="testecolspan",d.type="testetype",d.label="testelabel",d.maxlength="testemaxlength",d.max="testemax",d.min="testemin",d.mask="testemask",d.placeholder="testeplaceholder",d.inputSize="testeinputSize",d.showLabel={prop:"valorScope"},d.ngModel={prop:"ngModel"},d.ngRequired={prop:"ngRequired"},d.ngDisabled={prop:"ngDisabled"},d.ngReadonly={prop:"ngReadonly"},d.removeMask={prop:"removeMask"},d.autofocus={prop:"autofocus"},d.currency={prop:"currency"},d.toUpper={prop:"toUpper"},d.toLower={prop:"toLower"},d.ngChange=jasmine.createSpy("ngChange"),d.ngKeyup=jasmine.createSpy("ngKeyup"),d.ngKeydown=jasmine.createSpy("ngKeydown"),d.ngBlur=jasmine.createSpy("ngBlur"),e=a(),f=e.isolateScope()})),it("Teste input text. Divs presentes",function(){expect(e.find("div").length).toEqual(3),expect(e.find("div")).toBeDefined(),expect(e.find("div")).toBeTruthy()}),it("Isolated scope deve ter atributos assigned",function(){expect(f.showLabel).toBeDefined(),expect(f.ngChange).toBeDefined(),expect(f.ngModel).toBeDefined(),expect(f.ngRequired).toBeDefined(),expect(f.ngKeyup).toBeDefined(),expect(f.ngKeydown).toBeDefined(),expect(f.ngBlur).toBeDefined(),expect(f.ngDisabled).toBeDefined(),expect(f.ngReadonly).toBeDefined(),expect(f.removeMask).toBeDefined(),expect(f.autofocus).toBeDefined(),expect(f.currency).toBeDefined(),expect(f.toUpper).toBeDefined(),expect(f.toLower).toBeDefined(),expect(f.inputSize).toBeDefined()}),it('Teste atributos com scope isolado - one way binding ("@").',function(){expect(d.id).toEqual("testeId"),f.id="isoladoId",expect(d.id).toEqual("testeId"),expect(d.colspan).toEqual("testecolspan"),f.colspan="isoladocolspan",expect(d.colspan).toEqual("testecolspan"),expect(d.type).toEqual("testetype"),f.type="isoladotype",expect(d.type).toEqual("testetype"),expect(d.label).toEqual("testelabel"),f.label="isoladolabel",expect(d.label).toEqual("testelabel"),expect(d.maxlength).toEqual("testemaxlength"),f.maxlength="isoladomaxlengthl",expect(d.maxlength).toEqual("testemaxlength"),expect(d.max).toEqual("testemax"),f.max="isoladomax",expect(d.max).toEqual("testemax"),expect(d.min).toEqual("testemin"),f.min="isoladomax",expect(d.min).toEqual("testemin"),expect(d.mask).toEqual("testemask"),f.mask="isoladomask",expect(d.mask).toEqual("testemask"),expect(d.placeholder).toEqual("testeplaceholder"),f.placeholder="isoladoplaceholder",expect(d.placeholder).toEqual("testeplaceholder"),expect(d.inputSize).toEqual("testeinputSize"),f.inputSize="isoladoinputSize",expect(d.inputSize).toEqual("testeinputSize")}),it('Teste atributos com scope isolado - two way binding ("=").',function(){f.showLabel.prop="valorIsoladoScope",expect(d.showLabel.prop).toEqual("valorIsoladoScope"),f.ngModel.prop="valorIsoladoScope",expect(d.ngModel.prop).toEqual("valorIsoladoScope"),f.ngRequired.prop="valorIsoladoScope",expect(d.ngRequired.prop).toEqual("valorIsoladoScope"),f.ngDisabled.prop="valorIsoladoScope",expect(d.ngDisabled.prop).toEqual("valorIsoladoScope"),f.ngReadonly.prop="valorIsoladoScope",expect(d.ngReadonly.prop).toEqual("valorIsoladoScope"),f.removeMask.prop="valorIsoladoScope",expect(d.removeMask.prop).toEqual("valorIsoladoScope"),f.autofocus.prop="valorIsoladoScope",expect(d.autofocus.prop).toEqual("valorIsoladoScope"),f.currency.prop="valorIsoladoScope",expect(d.currency.prop).toEqual("valorIsoladoScope"),f.toUpper.prop="valorIsoladoScope",expect(d.toUpper.prop).toEqual("valorIsoladoScope"),f.toLower.prop="valorIsoladoScope",expect(d.toLower.prop).toEqual("valorIsoladoScope")}),it('Teste atributos - function ("&").',function(){expect(typeof f.ngChange).toEqual("function"),expect(typeof f.ngKeyup).toEqual("function"),expect(typeof f.ngKeydown).toEqual("function"),expect(typeof f.ngBlur).toEqual("function")}),it('Teste atributos com scope isolado - function ("&").',function(){f.ngChange(),expect(d.ngChange).toHaveBeenCalled(),f.ngKeyup(),expect(d.ngKeyup).toHaveBeenCalled(),f.ngKeydown(),expect(d.ngKeydown).toHaveBeenCalled(),f.ngBlur(),expect(d.ngBlur).toHaveBeenCalled()})});